begin(T1)

W(T1,x2,22)

end(T1) // x2_1 = 22, x2_2 = 22, ... , x2_10 = 22

fail(1)

begin(T2)

W(T2,x2,33)

end(T2) // x2_2 = 33, x2_3 = 33, ... , x2_10 = 33

beginRO(T3)

recover(1)

fail(2)

fail(3)

fail(4)

fail(5)

fail(6)

fail(7)

fail(8)

fail(9)

fail(10)

begin(T4)

W(T4,x2,44)

end(T4)		// x2_1 = 44, and x2_1.canRead = true

R(T3,x2)	// Only site 1 is up, but site 1 doesn't have version2's x2 = 33. 
        	// T3 should wait, and x2_1.canRead = true
        	// wl: R(T3,x2)

recover(2)	// New site 1 and site 2 are up, and site 2 has version2's x2 = 33.

end(T3)		// T3 reads x2 from version2 at site 2, x2 = 33.
			// T3 reads x2 from version2 at site 2, x2 = 33.
			// wl: empty

// I believe that the best way to modify the codes is that
// add a new member sites for class Version
// the structure of the initial version will be:
// version = [ (x1: 10, site: 2),
			   (x2: 20, site: 1 2 3 4 5 6 7 8 9 10),
			   (x3: 30, site: 4),
			   (x4: 40, site: 1 2 3 4 5 6 7 8 9 10),
			   (x5: 50, site: 6),
			   (x6: 60, site: 1 2 3 4 5 6 7 8 9 10),
			   (x7: 70, site: 8),
			   (x8: 80, site: 1 2 3 4 5 6 7 8 9 10),
			   (x9: 90, site: 10),
			   (x10: 100, site: 1 2 3 4 5 6 7 8 9 10),
			   (x11: 110, site: 2),
			   (x12: 120, site: 1 2 3 4 5 6 7 8 9 10),
			   (x13: 130, site: 4),
			   (x14: 140, site: 1 2 3 4 5 6 7 8 9 10),
			   (x15: 150, site: 6),
			   (x16: 160, site: 1 2 3 4 5 6 7 8 9 10),
			   (x17: 170, site: 8),
			   (x18: 180, site: 1 2 3 4 5 6 7 8 9 10),
			   (x19: 190, site: 10),
			   (x20: 200, site: 1 2 3 4 5 6 7 8 9 10), ]
